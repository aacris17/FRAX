#FRAX paper charts

#load FRAX paper charts
FRAX <-  read.csv("C:\\FRAX_paper.csv", header = TRUE, stringsAsFactors = FALSE)
FRAX <- data.frame(FRAX)
names(FRAX)<- c("Sex", "Race", Age","CRF","BMI","Risk", "Range")
convert <- c(1, 2, 7)
FRAX[convert] <- lapply(FRAX[convert], factor)

#load sample patient data
pts <-  read.csv("C:\\Users\\acriscit\\Documents\\Sample FRAX patients.csv", header = TRUE, stringsAsFactors = TRUE)
pts <- data.frame(pts)
names(pts)<- c("Patient.ID", "Sex", "Race", "rAge","CRF", "Fracture", "Parent.fracture", "Smoking", "Glucocorticoids", "RA", "Alcohol", "Osteoporosis", "rBMI", "Weight", "Height")
#rAge and rBMI are column names for 'raw' values as opposed to rounded values which are called Age and BMI

library(tidyverse)

#Round BMI to the nearest multiple of 5
roundfive <- function(x) {round(x/5)*5}
px <- pts %>% mutate(BMI = ifelse((rBMI<45)&(rBMI>15),roundfive(rBMI), ifelse (rBMI>45,45,15)))

#Round age down to the nearest 5
floorfive <- function(x) {floor(x/5)*5}
px <- px %>% mutate (Age = ifelse((rAge<90)&(rAge>50),floorfive(rAge), ifelse (rAge<50,50,90)))

#Join risk to patients
fx <- semi_join(FRAX, px, by= c("Sex","Race","Age","CRF","BMI"))
fl <- left_join(fx, px, by = c("Sex","Race","Age","CRF","BMI"))
fl%>% select(Patient.ID, Risk, Range)
#Returns patients ID, risk and range

#Alternatively
fx <- inner_join(FRAX, px, by= c("Sex","Race","Age","CRF","BMI"))
fx%>% select(Patient.ID, Risk, Range)
#The difference from above is that inner_join returns all columns of FRAX and pts while semi_join only returns columns from FRAX, requring the left_join. Also semi_join will only return 1 row of FRAX if patient data matches mutliple rows, while inner_join will return all the rows of FRAX that a patient matches, however, a patient should only match 1 row of FRAX unless patient data is missing
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

names(pts)<- c("Patient.ID", "Sex", "Race", "Age","CRF", "Fracture", "Parent.fracture", "Smoking", "Glucocorticoids", "RA", "Alcohol", "Osteoporosis", "BMI", "Weight", "Height", "Risk", "Range")

#Function to find risk
find_risk <- function(y){
#pt <- pts %>% filter(Patient.ID == y)
pt <- pts[y,]
as.character(pt[,"Sex"]) -> sex
as.character(pt[,"Race"]) -> race
as.character(pt[,"Age"]) -> age
as.character(pt[,"CRF"]) -> crf
as.integer(pt[,"BMI"]) -> bmi

result <- FRAX %>% filter(Sex == sex, Race == race, Age == age, CRF == crf, BMI == (round(bmi/5)*5))
pt <- cbind(pt,result$Risk, result$Range)
return(pt)
}
#lapply
df_list <- lapply(1:nrow(pts), find_risk)
df_out_lapply <- do.call(rbind, df_list)
df_out_lapply
